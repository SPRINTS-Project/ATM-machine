
CARD_MCU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a8a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000afe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  00000afe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000afe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e2e  00000000  00000000  00000c2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000083a  00000000  00000000  00001a5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac9  00000000  00000000  00002294  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00002d60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000773  00000000  00000000  00002f60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c8f  00000000  00000000  000036d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00004362  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  34:	0c 94 84 01 	jmp	0x308	; 0x308 <__vector_13>
  38:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__vector_14>
  3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <ldexp+0x1e>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_clear_bss>:
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
  ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
  ec:	a3 36       	cpi	r26, 0x63	; 99
  ee:	b2 07       	cpc	r27, r18
  f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
  f2:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  f6:	0c 94 43 05 	jmp	0xa86	; 0xa86 <_exit>

000000fa <__bad_interrupt>:
  fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <main>:
#include "MCAL/twi/twi.h"
#include <util/delay.h>


int main(void)
{
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	00 d0       	rcall	.+0      	; 0x104 <main+0x6>
 104:	1f 92       	push	r1
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0xff;
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xff;
 10e:	87 bb       	out	0x17, r24	; 23
	DDRD = 0xff;
 110:	81 bb       	out	0x11, r24	; 17
	st_twiConfigType x;
	x.u16_a_clock = 400;
 112:	80 e9       	ldi	r24, 0x90	; 144
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	9b 83       	std	Y+3, r25	; 0x03
 118:	8a 83       	std	Y+2, r24	; 0x02
	x.u8_a_prescaler = TWI_PRESCALER_1;
 11a:	19 82       	std	Y+1, r1	; 0x01
	TWI_init(&x);
 11c:	ce 01       	movw	r24, r28
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	0e 94 ba 00 	call	0x174	; 0x174 <TWI_init>
	for (int i = 0 ; i <10 ; i+=2)
 124:	00 e0       	ldi	r16, 0x00	; 0
 126:	10 e0       	ldi	r17, 0x00	; 0
 128:	1e c0       	rjmp	.+60     	; 0x166 <main+0x68>
	{
		PORTA = TWI_start();
 12a:	0e 94 18 01 	call	0x230	; 0x230 <TWI_start>
 12e:	8b bb       	out	0x1b, r24	; 27
		PORTB = TWI_wrtie(0x10,i);
 130:	60 2f       	mov	r22, r16
 132:	80 e1       	ldi	r24, 0x10	; 16
 134:	0e 94 48 01 	call	0x290	; 0x290 <TWI_wrtie>
 138:	88 bb       	out	0x18, r24	; 24
		TWI_repeated_start();
 13a:	0e 94 2b 01 	call	0x256	; 0x256 <TWI_repeated_start>
		TWI_wrtie(0x10+i,i+1);
 13e:	61 e0       	ldi	r22, 0x01	; 1
 140:	60 0f       	add	r22, r16
 142:	80 e1       	ldi	r24, 0x10	; 16
 144:	80 0f       	add	r24, r16
 146:	0e 94 48 01 	call	0x290	; 0x290 <TWI_wrtie>
		PORTD = TWI_stop();
 14a:	0e 94 3e 01 	call	0x27c	; 0x27c <TWI_stop>
 14e:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	83 ed       	ldi	r24, 0xD3	; 211
 154:	90 e3       	ldi	r25, 0x30	; 48
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0x58>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0x62>
 160:	00 00       	nop
	DDRD = 0xff;
	st_twiConfigType x;
	x.u16_a_clock = 400;
	x.u8_a_prescaler = TWI_PRESCALER_1;
	TWI_init(&x);
	for (int i = 0 ; i <10 ; i+=2)
 162:	0e 5f       	subi	r16, 0xFE	; 254
 164:	1f 4f       	sbci	r17, 0xFF	; 255
 166:	0a 30       	cpi	r16, 0x0A	; 10
 168:	11 05       	cpc	r17, r1
 16a:	fc f2       	brlt	.-66     	; 0x12a <main+0x2c>
 16c:	ff cf       	rjmp	.-2      	; 0x16c <main+0x6e>

0000016e <TWI_get_status>:

// function to get the status of TWI
uint8_t TWI_get_status(void)
{
	uint8_t status ;
	status = TWSR & 0xf8;
 16e:	81 b1       	in	r24, 0x01	; 1
	return status;
}
 170:	88 7f       	andi	r24, 0xF8	; 248
 172:	08 95       	ret

00000174 <TWI_init>:


u8_twiErrorType TWI_init(st_twiConfigType * st_twiConfig)
{
 174:	8f 92       	push	r8
 176:	9f 92       	push	r9
 178:	af 92       	push	r10
 17a:	bf 92       	push	r11
 17c:	cf 92       	push	r12
 17e:	df 92       	push	r13
 180:	ef 92       	push	r14
 182:	ff 92       	push	r15
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
	if (st_twiConfig == NULL)
 188:	00 97       	sbiw	r24, 0x00	; 0
 18a:	09 f4       	brne	.+2      	; 0x18e <TWI_init+0x1a>
 18c:	43 c0       	rjmp	.+134    	; 0x214 <TWI_init+0xa0>
	{
		u8_ret_val = TWI_ERROR_NOT_OK;
	}
	else{
		if ((st_twiConfig->u16_a_clock) == 0 || (st_twiConfig->u16_a_clock) > 400)
 18e:	fc 01       	movw	r30, r24
 190:	21 81       	ldd	r18, Z+1	; 0x01
 192:	32 81       	ldd	r19, Z+2	; 0x02
 194:	21 50       	subi	r18, 0x01	; 1
 196:	31 09       	sbc	r19, r1
 198:	20 39       	cpi	r18, 0x90	; 144
 19a:	31 40       	sbci	r19, 0x01	; 1
 19c:	e8 f5       	brcc	.+122    	; 0x218 <TWI_init+0xa4>
 19e:	ec 01       	movw	r28, r24
		{
			u8_ret_val = TWI_ERROR_NOT_OK;
		}
		else{
			// Initialize TWI driver
			TWSR = 0x00;	// Clear status register
 1a0:	11 b8       	out	0x01, r1	; 1
			TWSR |= st_twiConfig->u8_a_prescaler;		// Set prescaler 
 1a2:	91 b1       	in	r25, 0x01	; 1
 1a4:	88 81       	ld	r24, Y
 1a6:	89 2b       	or	r24, r25
 1a8:	81 b9       	out	0x01, r24	; 1
			TWBR = BIT_RATE(st_twiConfig->u16_a_clock , st_twiConfig->u8_a_prescaler);	// Set bit rate
 1aa:	29 81       	ldd	r18, Y+1	; 0x01
 1ac:	3a 81       	ldd	r19, Y+2	; 0x02
 1ae:	40 e0       	ldi	r20, 0x00	; 0
 1b0:	50 e0       	ldi	r21, 0x00	; 0
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	72 e1       	ldi	r23, 0x12	; 18
 1b6:	8a e7       	ldi	r24, 0x7A	; 122
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 21 05 	call	0xa42	; 0xa42 <__udivmodsi4>
 1be:	69 01       	movw	r12, r18
 1c0:	7a 01       	movw	r14, r20
 1c2:	80 e1       	ldi	r24, 0x10	; 16
 1c4:	c8 1a       	sub	r12, r24
 1c6:	d1 08       	sbc	r13, r1
 1c8:	e1 08       	sbc	r14, r1
 1ca:	f1 08       	sbc	r15, r1
 1cc:	68 81       	ld	r22, Y
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0e 94 a1 02 	call	0x542	; 0x542 <__floatunsisf>
 1d8:	9b 01       	movw	r18, r22
 1da:	ac 01       	movw	r20, r24
 1dc:	60 e0       	ldi	r22, 0x00	; 0
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	80 e8       	ldi	r24, 0x80	; 128
 1e2:	90 e4       	ldi	r25, 0x40	; 64
 1e4:	0e 94 9c 03 	call	0x738	; 0x738 <pow>
 1e8:	9b 01       	movw	r18, r22
 1ea:	ac 01       	movw	r20, r24
 1ec:	0e 94 94 01 	call	0x328	; 0x328 <__addsf3>
 1f0:	4b 01       	movw	r8, r22
 1f2:	5c 01       	movw	r10, r24
 1f4:	c7 01       	movw	r24, r14
 1f6:	b6 01       	movw	r22, r12
 1f8:	0e 94 a1 02 	call	0x542	; 0x542 <__floatunsisf>
 1fc:	a5 01       	movw	r20, r10
 1fe:	94 01       	movw	r18, r8
 200:	0e 94 00 02 	call	0x400	; 0x400 <__divsf3>
 204:	0e 94 72 02 	call	0x4e4	; 0x4e4 <__fixunssfsi>
 208:	60 b9       	out	0x00, r22	; 0
			u8_gs_twi_state = INIT;
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
}


u8_twiErrorType TWI_init(st_twiConfigType * st_twiConfig)
{
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	03 c0       	rjmp	.+6      	; 0x21a <TWI_init+0xa6>
	if (st_twiConfig == NULL)
	{
		u8_ret_val = TWI_ERROR_NOT_OK;
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	01 c0       	rjmp	.+2      	; 0x21a <TWI_init+0xa6>
	}
	else{
		if ((st_twiConfig->u16_a_clock) == 0 || (st_twiConfig->u16_a_clock) > 400)
		{
			u8_ret_val = TWI_ERROR_NOT_OK;
 218:	81 e0       	ldi	r24, 0x01	; 1
			TWBR = BIT_RATE(st_twiConfig->u16_a_clock , st_twiConfig->u8_a_prescaler);	// Set bit rate
			u8_gs_twi_state = INIT;
		}
	}
	return u8_ret_val;
}
 21a:	df 91       	pop	r29
 21c:	cf 91       	pop	r28
 21e:	ff 90       	pop	r15
 220:	ef 90       	pop	r14
 222:	df 90       	pop	r13
 224:	cf 90       	pop	r12
 226:	bf 90       	pop	r11
 228:	af 90       	pop	r10
 22a:	9f 90       	pop	r9
 22c:	8f 90       	pop	r8
 22e:	08 95       	ret

00000230 <TWI_start>:

u8_twiErrorType TWI_start(void)
{
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
	if (u8_gs_twi_state == INIT)
 230:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	59 f4       	brne	.+22     	; 0x24e <TWI_start+0x1e>
	{
		// SET TWI to start mode
		TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
 238:	84 ea       	ldi	r24, 0xA4	; 164
 23a:	86 bf       	out	0x36, r24	; 54
		// WAIT till TWI start
		while ((TWCR & (1<<TWINT))==0);
 23c:	06 b6       	in	r0, 0x36	; 54
 23e:	07 fe       	sbrs	r0, 7
 240:	fd cf       	rjmp	.-6      	; 0x23c <TWI_start+0xc>
		if (TWI_get_status() == START_STATE)
 242:	0e 94 b7 00 	call	0x16e	; 0x16e <TWI_get_status>
 246:	88 30       	cpi	r24, 0x08	; 8
 248:	21 f4       	brne	.+8      	; 0x252 <TWI_start+0x22>
	return u8_ret_val;
}

u8_twiErrorType TWI_start(void)
{
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	08 95       	ret
		else{
			u8_ret_val = TWI_ERROR_NOT_OK;
		}
	}
	else{
		u8_ret_val = TWI_ERROR_NOT_OK;
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	08 95       	ret
		if (TWI_get_status() == START_STATE)
		{
			// do nothing
		}
		else{
			u8_ret_val = TWI_ERROR_NOT_OK;
 252:	81 e0       	ldi	r24, 0x01	; 1
	}
	else{
		u8_ret_val = TWI_ERROR_NOT_OK;
	}
	return u8_ret_val;
}
 254:	08 95       	ret

00000256 <TWI_repeated_start>:


u8_twiErrorType TWI_repeated_start(void)
{
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
	if (u8_gs_twi_state == INIT)
 256:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 25a:	81 30       	cpi	r24, 0x01	; 1
 25c:	59 f4       	brne	.+22     	; 0x274 <TWI_repeated_start+0x1e>
	{
		// SET TWI to start mode
		TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
 25e:	84 ea       	ldi	r24, 0xA4	; 164
 260:	86 bf       	out	0x36, r24	; 54
		// WAIT till TWI start
		while ((TWCR & (1<<TWINT))==0);
 262:	06 b6       	in	r0, 0x36	; 54
 264:	07 fe       	sbrs	r0, 7
 266:	fd cf       	rjmp	.-6      	; 0x262 <TWI_repeated_start+0xc>
		if (TWI_get_status() == REPEATED_START_STATE)
 268:	0e 94 b7 00 	call	0x16e	; 0x16e <TWI_get_status>
 26c:	80 31       	cpi	r24, 0x10	; 16
 26e:	21 f4       	brne	.+8      	; 0x278 <TWI_repeated_start+0x22>
}


u8_twiErrorType TWI_repeated_start(void)
{
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	08 95       	ret
		else{
			u8_ret_val = TWI_ERROR_NOT_OK;
		}
	}
	else{
		u8_ret_val = TWI_ERROR_NOT_OK;
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	08 95       	ret
		if (TWI_get_status() == REPEATED_START_STATE)
		{
			// do nothing
		}
		else{
			u8_ret_val = TWI_ERROR_NOT_OK;
 278:	81 e0       	ldi	r24, 0x01	; 1
	}
	else{
		u8_ret_val = TWI_ERROR_NOT_OK;
	}
	return u8_ret_val;
}
 27a:	08 95       	ret

0000027c <TWI_stop>:


u8_twiErrorType TWI_stop(void)
{
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
	if (u8_gs_twi_state == INIT)
 27c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 280:	81 30       	cpi	r24, 0x01	; 1
 282:	21 f4       	brne	.+8      	; 0x28c <TWI_stop+0x10>
	{
		// SET TWI to stop mode
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
 284:	84 e9       	ldi	r24, 0x94	; 148
 286:	86 bf       	out	0x36, r24	; 54
}


u8_twiErrorType TWI_stop(void)
{
	u8_twiErrorType  u8_ret_val = TWI_ERROR_OK;
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	08 95       	ret
	{
		// SET TWI to stop mode
		TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
	}
	else{
		u8_ret_val = TWI_ERROR_NOT_OK;
 28c:	81 e0       	ldi	r24, 0x01	; 1
	}
	return u8_ret_val;
}
 28e:	08 95       	ret

00000290 <TWI_wrtie>:

u8_twiErrorType TWI_wrtie(uint8_t u8_address, uint8_t u8_data)
{
 290:	cf 93       	push	r28
	u8_twiErrorType u8_ret_val = TWI_ERROR_OK;
	if (u8_gs_twi_state == INIT)
 292:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 296:	91 30       	cpi	r25, 0x01	; 1
 298:	f9 f4       	brne	.+62     	; 0x2d8 <TWI_wrtie+0x48>
	{
		TWDR = u8_address + 0;
 29a:	83 b9       	out	0x03, r24	; 3
		TWCR = (1<<TWINT)|(1<<TWEN);
 29c:	84 e8       	ldi	r24, 0x84	; 132
 29e:	86 bf       	out	0x36, r24	; 54
		while ((TWCR & (1<<TWINT))==0);
 2a0:	06 b6       	in	r0, 0x36	; 54
 2a2:	07 fe       	sbrs	r0, 7
 2a4:	fd cf       	rjmp	.-6      	; 0x2a0 <TWI_wrtie+0x10>
 2a6:	c6 2f       	mov	r28, r22
		if (TWI_get_status() == SLA_W_ACK_STATE || TWI_get_status() == SLA_W_NACK_STATE)
 2a8:	0e 94 b7 00 	call	0x16e	; 0x16e <TWI_get_status>
 2ac:	88 31       	cpi	r24, 0x18	; 24
 2ae:	21 f0       	breq	.+8      	; 0x2b8 <TWI_wrtie+0x28>
 2b0:	0e 94 b7 00 	call	0x16e	; 0x16e <TWI_get_status>
 2b4:	80 32       	cpi	r24, 0x20	; 32
 2b6:	91 f4       	brne	.+36     	; 0x2dc <TWI_wrtie+0x4c>
		{
			TWDR = u8_data;
 2b8:	c3 b9       	out	0x03, r28	; 3
			TWCR = (1<<TWINT)|(1<<TWEN);
 2ba:	84 e8       	ldi	r24, 0x84	; 132
 2bc:	86 bf       	out	0x36, r24	; 54
			while ((TWCR & (1<<TWINT))==0);
 2be:	06 b6       	in	r0, 0x36	; 54
 2c0:	07 fe       	sbrs	r0, 7
 2c2:	fd cf       	rjmp	.-6      	; 0x2be <TWI_wrtie+0x2e>
			if (TWI_get_status() == DATA_W_ACK_STATE || TWI_get_status() == DATA_W_NACK_STATE)
 2c4:	0e 94 b7 00 	call	0x16e	; 0x16e <TWI_get_status>
 2c8:	88 32       	cpi	r24, 0x28	; 40
 2ca:	51 f0       	breq	.+20     	; 0x2e0 <TWI_wrtie+0x50>
 2cc:	0e 94 b7 00 	call	0x16e	; 0x16e <TWI_get_status>
 2d0:	80 33       	cpi	r24, 0x30	; 48
 2d2:	41 f4       	brne	.+16     	; 0x2e4 <TWI_wrtie+0x54>
	return u8_ret_val;
}

u8_twiErrorType TWI_wrtie(uint8_t u8_address, uint8_t u8_data)
{
	u8_twiErrorType u8_ret_val = TWI_ERROR_OK;
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	07 c0       	rjmp	.+14     	; 0x2e6 <TWI_wrtie+0x56>
		else{
			u8_ret_val = TWI_ERROR_NOT_OK;
		}
	}
	else{
		u8_ret_val = TWI_ERROR_NOT_OK;
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	05 c0       	rjmp	.+10     	; 0x2e6 <TWI_wrtie+0x56>
			else{
				u8_ret_val = TWI_ERROR_NOT_OK;
			}
		}
		else{
			u8_ret_val = TWI_ERROR_NOT_OK;
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	03 c0       	rjmp	.+6      	; 0x2e6 <TWI_wrtie+0x56>
	return u8_ret_val;
}

u8_twiErrorType TWI_wrtie(uint8_t u8_address, uint8_t u8_data)
{
	u8_twiErrorType u8_ret_val = TWI_ERROR_OK;
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <TWI_wrtie+0x56>
			if (TWI_get_status() == DATA_W_ACK_STATE || TWI_get_status() == DATA_W_NACK_STATE)
			{
				// do nothing
			}
			else{
				u8_ret_val = TWI_ERROR_NOT_OK;
 2e4:	81 e0       	ldi	r24, 0x01	; 1
	}
	else{
		u8_ret_val = TWI_ERROR_NOT_OK;
	}
	return u8_ret_val;
}
 2e6:	cf 91       	pop	r28
 2e8:	08 95       	ret

000002ea <__vector_14>:
 2ea:	1f 92       	push	r1
 2ec:	0f 92       	push	r0
 2ee:	0f b6       	in	r0, 0x3f	; 63
 2f0:	0f 92       	push	r0
 2f2:	11 24       	eor	r1, r1
 2f4:	8f 93       	push	r24
 2f6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <u8_sg_dataTransimted>
 2fa:	8c b9       	out	0x0c, r24	; 12
 2fc:	8f 91       	pop	r24
 2fe:	0f 90       	pop	r0
 300:	0f be       	out	0x3f, r0	; 63
 302:	0f 90       	pop	r0
 304:	1f 90       	pop	r1
 306:	18 95       	reti

00000308 <__vector_13>:
 308:	1f 92       	push	r1
 30a:	0f 92       	push	r0
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	0f 92       	push	r0
 310:	11 24       	eor	r1, r1
 312:	8f 93       	push	r24
 314:	8c b1       	in	r24, 0x0c	; 12
 316:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <u8_sg_dataRecieved>
 31a:	8f 91       	pop	r24
 31c:	0f 90       	pop	r0
 31e:	0f be       	out	0x3f, r0	; 63
 320:	0f 90       	pop	r0
 322:	1f 90       	pop	r1
 324:	18 95       	reti

00000326 <__subsf3>:
 326:	50 58       	subi	r21, 0x80	; 128

00000328 <__addsf3>:
 328:	bb 27       	eor	r27, r27
 32a:	aa 27       	eor	r26, r26
 32c:	0e 94 ab 01 	call	0x356	; 0x356 <__addsf3x>
 330:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_round>
 334:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscA>
 338:	38 f0       	brcs	.+14     	; 0x348 <__addsf3+0x20>
 33a:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscB>
 33e:	20 f0       	brcs	.+8      	; 0x348 <__addsf3+0x20>
 340:	39 f4       	brne	.+14     	; 0x350 <__addsf3+0x28>
 342:	9f 3f       	cpi	r25, 0xFF	; 255
 344:	19 f4       	brne	.+6      	; 0x34c <__addsf3+0x24>
 346:	26 f4       	brtc	.+8      	; 0x350 <__addsf3+0x28>
 348:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_nan>
 34c:	0e f4       	brtc	.+2      	; 0x350 <__addsf3+0x28>
 34e:	e0 95       	com	r30
 350:	e7 fb       	bst	r30, 7
 352:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>

00000356 <__addsf3x>:
 356:	e9 2f       	mov	r30, r25
 358:	0e 94 06 03 	call	0x60c	; 0x60c <__fp_split3>
 35c:	58 f3       	brcs	.-42     	; 0x334 <__addsf3+0xc>
 35e:	ba 17       	cp	r27, r26
 360:	62 07       	cpc	r22, r18
 362:	73 07       	cpc	r23, r19
 364:	84 07       	cpc	r24, r20
 366:	95 07       	cpc	r25, r21
 368:	20 f0       	brcs	.+8      	; 0x372 <__addsf3x+0x1c>
 36a:	79 f4       	brne	.+30     	; 0x38a <__addsf3x+0x34>
 36c:	a6 f5       	brtc	.+104    	; 0x3d6 <__addsf3x+0x80>
 36e:	0c 94 28 03 	jmp	0x650	; 0x650 <__fp_zero>
 372:	0e f4       	brtc	.+2      	; 0x376 <__addsf3x+0x20>
 374:	e0 95       	com	r30
 376:	0b 2e       	mov	r0, r27
 378:	ba 2f       	mov	r27, r26
 37a:	a0 2d       	mov	r26, r0
 37c:	0b 01       	movw	r0, r22
 37e:	b9 01       	movw	r22, r18
 380:	90 01       	movw	r18, r0
 382:	0c 01       	movw	r0, r24
 384:	ca 01       	movw	r24, r20
 386:	a0 01       	movw	r20, r0
 388:	11 24       	eor	r1, r1
 38a:	ff 27       	eor	r31, r31
 38c:	59 1b       	sub	r21, r25
 38e:	99 f0       	breq	.+38     	; 0x3b6 <__addsf3x+0x60>
 390:	59 3f       	cpi	r21, 0xF9	; 249
 392:	50 f4       	brcc	.+20     	; 0x3a8 <__addsf3x+0x52>
 394:	50 3e       	cpi	r21, 0xE0	; 224
 396:	68 f1       	brcs	.+90     	; 0x3f2 <__addsf3x+0x9c>
 398:	1a 16       	cp	r1, r26
 39a:	f0 40       	sbci	r31, 0x00	; 0
 39c:	a2 2f       	mov	r26, r18
 39e:	23 2f       	mov	r18, r19
 3a0:	34 2f       	mov	r19, r20
 3a2:	44 27       	eor	r20, r20
 3a4:	58 5f       	subi	r21, 0xF8	; 248
 3a6:	f3 cf       	rjmp	.-26     	; 0x38e <__addsf3x+0x38>
 3a8:	46 95       	lsr	r20
 3aa:	37 95       	ror	r19
 3ac:	27 95       	ror	r18
 3ae:	a7 95       	ror	r26
 3b0:	f0 40       	sbci	r31, 0x00	; 0
 3b2:	53 95       	inc	r21
 3b4:	c9 f7       	brne	.-14     	; 0x3a8 <__addsf3x+0x52>
 3b6:	7e f4       	brtc	.+30     	; 0x3d6 <__addsf3x+0x80>
 3b8:	1f 16       	cp	r1, r31
 3ba:	ba 0b       	sbc	r27, r26
 3bc:	62 0b       	sbc	r22, r18
 3be:	73 0b       	sbc	r23, r19
 3c0:	84 0b       	sbc	r24, r20
 3c2:	ba f0       	brmi	.+46     	; 0x3f2 <__addsf3x+0x9c>
 3c4:	91 50       	subi	r25, 0x01	; 1
 3c6:	a1 f0       	breq	.+40     	; 0x3f0 <__addsf3x+0x9a>
 3c8:	ff 0f       	add	r31, r31
 3ca:	bb 1f       	adc	r27, r27
 3cc:	66 1f       	adc	r22, r22
 3ce:	77 1f       	adc	r23, r23
 3d0:	88 1f       	adc	r24, r24
 3d2:	c2 f7       	brpl	.-16     	; 0x3c4 <__addsf3x+0x6e>
 3d4:	0e c0       	rjmp	.+28     	; 0x3f2 <__addsf3x+0x9c>
 3d6:	ba 0f       	add	r27, r26
 3d8:	62 1f       	adc	r22, r18
 3da:	73 1f       	adc	r23, r19
 3dc:	84 1f       	adc	r24, r20
 3de:	48 f4       	brcc	.+18     	; 0x3f2 <__addsf3x+0x9c>
 3e0:	87 95       	ror	r24
 3e2:	77 95       	ror	r23
 3e4:	67 95       	ror	r22
 3e6:	b7 95       	ror	r27
 3e8:	f7 95       	ror	r31
 3ea:	9e 3f       	cpi	r25, 0xFE	; 254
 3ec:	08 f0       	brcs	.+2      	; 0x3f0 <__addsf3x+0x9a>
 3ee:	b0 cf       	rjmp	.-160    	; 0x350 <__addsf3+0x28>
 3f0:	93 95       	inc	r25
 3f2:	88 0f       	add	r24, r24
 3f4:	08 f0       	brcs	.+2      	; 0x3f8 <__addsf3x+0xa2>
 3f6:	99 27       	eor	r25, r25
 3f8:	ee 0f       	add	r30, r30
 3fa:	97 95       	ror	r25
 3fc:	87 95       	ror	r24
 3fe:	08 95       	ret

00000400 <__divsf3>:
 400:	0e 94 14 02 	call	0x428	; 0x428 <__divsf3x>
 404:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_round>
 408:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscB>
 40c:	58 f0       	brcs	.+22     	; 0x424 <__divsf3+0x24>
 40e:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscA>
 412:	40 f0       	brcs	.+16     	; 0x424 <__divsf3+0x24>
 414:	29 f4       	brne	.+10     	; 0x420 <__divsf3+0x20>
 416:	5f 3f       	cpi	r21, 0xFF	; 255
 418:	29 f0       	breq	.+10     	; 0x424 <__divsf3+0x24>
 41a:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>
 41e:	51 11       	cpse	r21, r1
 420:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_szero>
 424:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_nan>

00000428 <__divsf3x>:
 428:	0e 94 06 03 	call	0x60c	; 0x60c <__fp_split3>
 42c:	68 f3       	brcs	.-38     	; 0x408 <__divsf3+0x8>

0000042e <__divsf3_pse>:
 42e:	99 23       	and	r25, r25
 430:	b1 f3       	breq	.-20     	; 0x41e <__divsf3+0x1e>
 432:	55 23       	and	r21, r21
 434:	91 f3       	breq	.-28     	; 0x41a <__divsf3+0x1a>
 436:	95 1b       	sub	r25, r21
 438:	55 0b       	sbc	r21, r21
 43a:	bb 27       	eor	r27, r27
 43c:	aa 27       	eor	r26, r26
 43e:	62 17       	cp	r22, r18
 440:	73 07       	cpc	r23, r19
 442:	84 07       	cpc	r24, r20
 444:	38 f0       	brcs	.+14     	; 0x454 <__divsf3_pse+0x26>
 446:	9f 5f       	subi	r25, 0xFF	; 255
 448:	5f 4f       	sbci	r21, 0xFF	; 255
 44a:	22 0f       	add	r18, r18
 44c:	33 1f       	adc	r19, r19
 44e:	44 1f       	adc	r20, r20
 450:	aa 1f       	adc	r26, r26
 452:	a9 f3       	breq	.-22     	; 0x43e <__divsf3_pse+0x10>
 454:	35 d0       	rcall	.+106    	; 0x4c0 <__divsf3_pse+0x92>
 456:	0e 2e       	mov	r0, r30
 458:	3a f0       	brmi	.+14     	; 0x468 <__divsf3_pse+0x3a>
 45a:	e0 e8       	ldi	r30, 0x80	; 128
 45c:	32 d0       	rcall	.+100    	; 0x4c2 <__divsf3_pse+0x94>
 45e:	91 50       	subi	r25, 0x01	; 1
 460:	50 40       	sbci	r21, 0x00	; 0
 462:	e6 95       	lsr	r30
 464:	00 1c       	adc	r0, r0
 466:	ca f7       	brpl	.-14     	; 0x45a <__divsf3_pse+0x2c>
 468:	2b d0       	rcall	.+86     	; 0x4c0 <__divsf3_pse+0x92>
 46a:	fe 2f       	mov	r31, r30
 46c:	29 d0       	rcall	.+82     	; 0x4c0 <__divsf3_pse+0x92>
 46e:	66 0f       	add	r22, r22
 470:	77 1f       	adc	r23, r23
 472:	88 1f       	adc	r24, r24
 474:	bb 1f       	adc	r27, r27
 476:	26 17       	cp	r18, r22
 478:	37 07       	cpc	r19, r23
 47a:	48 07       	cpc	r20, r24
 47c:	ab 07       	cpc	r26, r27
 47e:	b0 e8       	ldi	r27, 0x80	; 128
 480:	09 f0       	breq	.+2      	; 0x484 <__divsf3_pse+0x56>
 482:	bb 0b       	sbc	r27, r27
 484:	80 2d       	mov	r24, r0
 486:	bf 01       	movw	r22, r30
 488:	ff 27       	eor	r31, r31
 48a:	93 58       	subi	r25, 0x83	; 131
 48c:	5f 4f       	sbci	r21, 0xFF	; 255
 48e:	3a f0       	brmi	.+14     	; 0x49e <__divsf3_pse+0x70>
 490:	9e 3f       	cpi	r25, 0xFE	; 254
 492:	51 05       	cpc	r21, r1
 494:	78 f0       	brcs	.+30     	; 0x4b4 <__divsf3_pse+0x86>
 496:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>
 49a:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_szero>
 49e:	5f 3f       	cpi	r21, 0xFF	; 255
 4a0:	e4 f3       	brlt	.-8      	; 0x49a <__divsf3_pse+0x6c>
 4a2:	98 3e       	cpi	r25, 0xE8	; 232
 4a4:	d4 f3       	brlt	.-12     	; 0x49a <__divsf3_pse+0x6c>
 4a6:	86 95       	lsr	r24
 4a8:	77 95       	ror	r23
 4aa:	67 95       	ror	r22
 4ac:	b7 95       	ror	r27
 4ae:	f7 95       	ror	r31
 4b0:	9f 5f       	subi	r25, 0xFF	; 255
 4b2:	c9 f7       	brne	.-14     	; 0x4a6 <__divsf3_pse+0x78>
 4b4:	88 0f       	add	r24, r24
 4b6:	91 1d       	adc	r25, r1
 4b8:	96 95       	lsr	r25
 4ba:	87 95       	ror	r24
 4bc:	97 f9       	bld	r25, 7
 4be:	08 95       	ret
 4c0:	e1 e0       	ldi	r30, 0x01	; 1
 4c2:	66 0f       	add	r22, r22
 4c4:	77 1f       	adc	r23, r23
 4c6:	88 1f       	adc	r24, r24
 4c8:	bb 1f       	adc	r27, r27
 4ca:	62 17       	cp	r22, r18
 4cc:	73 07       	cpc	r23, r19
 4ce:	84 07       	cpc	r24, r20
 4d0:	ba 07       	cpc	r27, r26
 4d2:	20 f0       	brcs	.+8      	; 0x4dc <__divsf3_pse+0xae>
 4d4:	62 1b       	sub	r22, r18
 4d6:	73 0b       	sbc	r23, r19
 4d8:	84 0b       	sbc	r24, r20
 4da:	ba 0b       	sbc	r27, r26
 4dc:	ee 1f       	adc	r30, r30
 4de:	88 f7       	brcc	.-30     	; 0x4c2 <__divsf3_pse+0x94>
 4e0:	e0 95       	com	r30
 4e2:	08 95       	ret

000004e4 <__fixunssfsi>:
 4e4:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_splitA>
 4e8:	88 f0       	brcs	.+34     	; 0x50c <__fixunssfsi+0x28>
 4ea:	9f 57       	subi	r25, 0x7F	; 127
 4ec:	98 f0       	brcs	.+38     	; 0x514 <__fixunssfsi+0x30>
 4ee:	b9 2f       	mov	r27, r25
 4f0:	99 27       	eor	r25, r25
 4f2:	b7 51       	subi	r27, 0x17	; 23
 4f4:	b0 f0       	brcs	.+44     	; 0x522 <__fixunssfsi+0x3e>
 4f6:	e1 f0       	breq	.+56     	; 0x530 <__fixunssfsi+0x4c>
 4f8:	66 0f       	add	r22, r22
 4fa:	77 1f       	adc	r23, r23
 4fc:	88 1f       	adc	r24, r24
 4fe:	99 1f       	adc	r25, r25
 500:	1a f0       	brmi	.+6      	; 0x508 <__fixunssfsi+0x24>
 502:	ba 95       	dec	r27
 504:	c9 f7       	brne	.-14     	; 0x4f8 <__fixunssfsi+0x14>
 506:	14 c0       	rjmp	.+40     	; 0x530 <__fixunssfsi+0x4c>
 508:	b1 30       	cpi	r27, 0x01	; 1
 50a:	91 f0       	breq	.+36     	; 0x530 <__fixunssfsi+0x4c>
 50c:	0e 94 28 03 	call	0x650	; 0x650 <__fp_zero>
 510:	b1 e0       	ldi	r27, 0x01	; 1
 512:	08 95       	ret
 514:	0c 94 28 03 	jmp	0x650	; 0x650 <__fp_zero>
 518:	67 2f       	mov	r22, r23
 51a:	78 2f       	mov	r23, r24
 51c:	88 27       	eor	r24, r24
 51e:	b8 5f       	subi	r27, 0xF8	; 248
 520:	39 f0       	breq	.+14     	; 0x530 <__fixunssfsi+0x4c>
 522:	b9 3f       	cpi	r27, 0xF9	; 249
 524:	cc f3       	brlt	.-14     	; 0x518 <__fixunssfsi+0x34>
 526:	86 95       	lsr	r24
 528:	77 95       	ror	r23
 52a:	67 95       	ror	r22
 52c:	b3 95       	inc	r27
 52e:	d9 f7       	brne	.-10     	; 0x526 <__fixunssfsi+0x42>
 530:	3e f4       	brtc	.+14     	; 0x540 <__fixunssfsi+0x5c>
 532:	90 95       	com	r25
 534:	80 95       	com	r24
 536:	70 95       	com	r23
 538:	61 95       	neg	r22
 53a:	7f 4f       	sbci	r23, 0xFF	; 255
 53c:	8f 4f       	sbci	r24, 0xFF	; 255
 53e:	9f 4f       	sbci	r25, 0xFF	; 255
 540:	08 95       	ret

00000542 <__floatunsisf>:
 542:	e8 94       	clt
 544:	09 c0       	rjmp	.+18     	; 0x558 <__floatsisf+0x12>

00000546 <__floatsisf>:
 546:	97 fb       	bst	r25, 7
 548:	3e f4       	brtc	.+14     	; 0x558 <__floatsisf+0x12>
 54a:	90 95       	com	r25
 54c:	80 95       	com	r24
 54e:	70 95       	com	r23
 550:	61 95       	neg	r22
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	99 23       	and	r25, r25
 55a:	a9 f0       	breq	.+42     	; 0x586 <__floatsisf+0x40>
 55c:	f9 2f       	mov	r31, r25
 55e:	96 e9       	ldi	r25, 0x96	; 150
 560:	bb 27       	eor	r27, r27
 562:	93 95       	inc	r25
 564:	f6 95       	lsr	r31
 566:	87 95       	ror	r24
 568:	77 95       	ror	r23
 56a:	67 95       	ror	r22
 56c:	b7 95       	ror	r27
 56e:	f1 11       	cpse	r31, r1
 570:	f8 cf       	rjmp	.-16     	; 0x562 <__floatsisf+0x1c>
 572:	fa f4       	brpl	.+62     	; 0x5b2 <__floatsisf+0x6c>
 574:	bb 0f       	add	r27, r27
 576:	11 f4       	brne	.+4      	; 0x57c <__floatsisf+0x36>
 578:	60 ff       	sbrs	r22, 0
 57a:	1b c0       	rjmp	.+54     	; 0x5b2 <__floatsisf+0x6c>
 57c:	6f 5f       	subi	r22, 0xFF	; 255
 57e:	7f 4f       	sbci	r23, 0xFF	; 255
 580:	8f 4f       	sbci	r24, 0xFF	; 255
 582:	9f 4f       	sbci	r25, 0xFF	; 255
 584:	16 c0       	rjmp	.+44     	; 0x5b2 <__floatsisf+0x6c>
 586:	88 23       	and	r24, r24
 588:	11 f0       	breq	.+4      	; 0x58e <__floatsisf+0x48>
 58a:	96 e9       	ldi	r25, 0x96	; 150
 58c:	11 c0       	rjmp	.+34     	; 0x5b0 <__floatsisf+0x6a>
 58e:	77 23       	and	r23, r23
 590:	21 f0       	breq	.+8      	; 0x59a <__floatsisf+0x54>
 592:	9e e8       	ldi	r25, 0x8E	; 142
 594:	87 2f       	mov	r24, r23
 596:	76 2f       	mov	r23, r22
 598:	05 c0       	rjmp	.+10     	; 0x5a4 <__floatsisf+0x5e>
 59a:	66 23       	and	r22, r22
 59c:	71 f0       	breq	.+28     	; 0x5ba <__floatsisf+0x74>
 59e:	96 e8       	ldi	r25, 0x86	; 134
 5a0:	86 2f       	mov	r24, r22
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	60 e0       	ldi	r22, 0x00	; 0
 5a6:	2a f0       	brmi	.+10     	; 0x5b2 <__floatsisf+0x6c>
 5a8:	9a 95       	dec	r25
 5aa:	66 0f       	add	r22, r22
 5ac:	77 1f       	adc	r23, r23
 5ae:	88 1f       	adc	r24, r24
 5b0:	da f7       	brpl	.-10     	; 0x5a8 <__floatsisf+0x62>
 5b2:	88 0f       	add	r24, r24
 5b4:	96 95       	lsr	r25
 5b6:	87 95       	ror	r24
 5b8:	97 f9       	bld	r25, 7
 5ba:	08 95       	ret

000005bc <__fp_inf>:
 5bc:	97 f9       	bld	r25, 7
 5be:	9f 67       	ori	r25, 0x7F	; 127
 5c0:	80 e8       	ldi	r24, 0x80	; 128
 5c2:	70 e0       	ldi	r23, 0x00	; 0
 5c4:	60 e0       	ldi	r22, 0x00	; 0
 5c6:	08 95       	ret

000005c8 <__fp_nan>:
 5c8:	9f ef       	ldi	r25, 0xFF	; 255
 5ca:	80 ec       	ldi	r24, 0xC0	; 192
 5cc:	08 95       	ret

000005ce <__fp_pscA>:
 5ce:	00 24       	eor	r0, r0
 5d0:	0a 94       	dec	r0
 5d2:	16 16       	cp	r1, r22
 5d4:	17 06       	cpc	r1, r23
 5d6:	18 06       	cpc	r1, r24
 5d8:	09 06       	cpc	r0, r25
 5da:	08 95       	ret

000005dc <__fp_pscB>:
 5dc:	00 24       	eor	r0, r0
 5de:	0a 94       	dec	r0
 5e0:	12 16       	cp	r1, r18
 5e2:	13 06       	cpc	r1, r19
 5e4:	14 06       	cpc	r1, r20
 5e6:	05 06       	cpc	r0, r21
 5e8:	08 95       	ret

000005ea <__fp_round>:
 5ea:	09 2e       	mov	r0, r25
 5ec:	03 94       	inc	r0
 5ee:	00 0c       	add	r0, r0
 5f0:	11 f4       	brne	.+4      	; 0x5f6 <__fp_round+0xc>
 5f2:	88 23       	and	r24, r24
 5f4:	52 f0       	brmi	.+20     	; 0x60a <__fp_round+0x20>
 5f6:	bb 0f       	add	r27, r27
 5f8:	40 f4       	brcc	.+16     	; 0x60a <__fp_round+0x20>
 5fa:	bf 2b       	or	r27, r31
 5fc:	11 f4       	brne	.+4      	; 0x602 <__fp_round+0x18>
 5fe:	60 ff       	sbrs	r22, 0
 600:	04 c0       	rjmp	.+8      	; 0x60a <__fp_round+0x20>
 602:	6f 5f       	subi	r22, 0xFF	; 255
 604:	7f 4f       	sbci	r23, 0xFF	; 255
 606:	8f 4f       	sbci	r24, 0xFF	; 255
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	08 95       	ret

0000060c <__fp_split3>:
 60c:	57 fd       	sbrc	r21, 7
 60e:	90 58       	subi	r25, 0x80	; 128
 610:	44 0f       	add	r20, r20
 612:	55 1f       	adc	r21, r21
 614:	59 f0       	breq	.+22     	; 0x62c <__fp_splitA+0x10>
 616:	5f 3f       	cpi	r21, 0xFF	; 255
 618:	71 f0       	breq	.+28     	; 0x636 <__fp_splitA+0x1a>
 61a:	47 95       	ror	r20

0000061c <__fp_splitA>:
 61c:	88 0f       	add	r24, r24
 61e:	97 fb       	bst	r25, 7
 620:	99 1f       	adc	r25, r25
 622:	61 f0       	breq	.+24     	; 0x63c <__fp_splitA+0x20>
 624:	9f 3f       	cpi	r25, 0xFF	; 255
 626:	79 f0       	breq	.+30     	; 0x646 <__fp_splitA+0x2a>
 628:	87 95       	ror	r24
 62a:	08 95       	ret
 62c:	12 16       	cp	r1, r18
 62e:	13 06       	cpc	r1, r19
 630:	14 06       	cpc	r1, r20
 632:	55 1f       	adc	r21, r21
 634:	f2 cf       	rjmp	.-28     	; 0x61a <__fp_split3+0xe>
 636:	46 95       	lsr	r20
 638:	f1 df       	rcall	.-30     	; 0x61c <__fp_splitA>
 63a:	08 c0       	rjmp	.+16     	; 0x64c <__fp_splitA+0x30>
 63c:	16 16       	cp	r1, r22
 63e:	17 06       	cpc	r1, r23
 640:	18 06       	cpc	r1, r24
 642:	99 1f       	adc	r25, r25
 644:	f1 cf       	rjmp	.-30     	; 0x628 <__fp_splitA+0xc>
 646:	86 95       	lsr	r24
 648:	71 05       	cpc	r23, r1
 64a:	61 05       	cpc	r22, r1
 64c:	08 94       	sec
 64e:	08 95       	ret

00000650 <__fp_zero>:
 650:	e8 94       	clt

00000652 <__fp_szero>:
 652:	bb 27       	eor	r27, r27
 654:	66 27       	eor	r22, r22
 656:	77 27       	eor	r23, r23
 658:	cb 01       	movw	r24, r22
 65a:	97 f9       	bld	r25, 7
 65c:	08 95       	ret

0000065e <__mulsf3>:
 65e:	0e 94 42 03 	call	0x684	; 0x684 <__mulsf3x>
 662:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_round>
 666:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscA>
 66a:	38 f0       	brcs	.+14     	; 0x67a <__mulsf3+0x1c>
 66c:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fp_pscB>
 670:	20 f0       	brcs	.+8      	; 0x67a <__mulsf3+0x1c>
 672:	95 23       	and	r25, r21
 674:	11 f0       	breq	.+4      	; 0x67a <__mulsf3+0x1c>
 676:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>
 67a:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_nan>
 67e:	11 24       	eor	r1, r1
 680:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_szero>

00000684 <__mulsf3x>:
 684:	0e 94 06 03 	call	0x60c	; 0x60c <__fp_split3>
 688:	70 f3       	brcs	.-36     	; 0x666 <__mulsf3+0x8>

0000068a <__mulsf3_pse>:
 68a:	95 9f       	mul	r25, r21
 68c:	c1 f3       	breq	.-16     	; 0x67e <__mulsf3+0x20>
 68e:	95 0f       	add	r25, r21
 690:	50 e0       	ldi	r21, 0x00	; 0
 692:	55 1f       	adc	r21, r21
 694:	62 9f       	mul	r22, r18
 696:	f0 01       	movw	r30, r0
 698:	72 9f       	mul	r23, r18
 69a:	bb 27       	eor	r27, r27
 69c:	f0 0d       	add	r31, r0
 69e:	b1 1d       	adc	r27, r1
 6a0:	63 9f       	mul	r22, r19
 6a2:	aa 27       	eor	r26, r26
 6a4:	f0 0d       	add	r31, r0
 6a6:	b1 1d       	adc	r27, r1
 6a8:	aa 1f       	adc	r26, r26
 6aa:	64 9f       	mul	r22, r20
 6ac:	66 27       	eor	r22, r22
 6ae:	b0 0d       	add	r27, r0
 6b0:	a1 1d       	adc	r26, r1
 6b2:	66 1f       	adc	r22, r22
 6b4:	82 9f       	mul	r24, r18
 6b6:	22 27       	eor	r18, r18
 6b8:	b0 0d       	add	r27, r0
 6ba:	a1 1d       	adc	r26, r1
 6bc:	62 1f       	adc	r22, r18
 6be:	73 9f       	mul	r23, r19
 6c0:	b0 0d       	add	r27, r0
 6c2:	a1 1d       	adc	r26, r1
 6c4:	62 1f       	adc	r22, r18
 6c6:	83 9f       	mul	r24, r19
 6c8:	a0 0d       	add	r26, r0
 6ca:	61 1d       	adc	r22, r1
 6cc:	22 1f       	adc	r18, r18
 6ce:	74 9f       	mul	r23, r20
 6d0:	33 27       	eor	r19, r19
 6d2:	a0 0d       	add	r26, r0
 6d4:	61 1d       	adc	r22, r1
 6d6:	23 1f       	adc	r18, r19
 6d8:	84 9f       	mul	r24, r20
 6da:	60 0d       	add	r22, r0
 6dc:	21 1d       	adc	r18, r1
 6de:	82 2f       	mov	r24, r18
 6e0:	76 2f       	mov	r23, r22
 6e2:	6a 2f       	mov	r22, r26
 6e4:	11 24       	eor	r1, r1
 6e6:	9f 57       	subi	r25, 0x7F	; 127
 6e8:	50 40       	sbci	r21, 0x00	; 0
 6ea:	9a f0       	brmi	.+38     	; 0x712 <__mulsf3_pse+0x88>
 6ec:	f1 f0       	breq	.+60     	; 0x72a <__mulsf3_pse+0xa0>
 6ee:	88 23       	and	r24, r24
 6f0:	4a f0       	brmi	.+18     	; 0x704 <__mulsf3_pse+0x7a>
 6f2:	ee 0f       	add	r30, r30
 6f4:	ff 1f       	adc	r31, r31
 6f6:	bb 1f       	adc	r27, r27
 6f8:	66 1f       	adc	r22, r22
 6fa:	77 1f       	adc	r23, r23
 6fc:	88 1f       	adc	r24, r24
 6fe:	91 50       	subi	r25, 0x01	; 1
 700:	50 40       	sbci	r21, 0x00	; 0
 702:	a9 f7       	brne	.-22     	; 0x6ee <__mulsf3_pse+0x64>
 704:	9e 3f       	cpi	r25, 0xFE	; 254
 706:	51 05       	cpc	r21, r1
 708:	80 f0       	brcs	.+32     	; 0x72a <__mulsf3_pse+0xa0>
 70a:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>
 70e:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_szero>
 712:	5f 3f       	cpi	r21, 0xFF	; 255
 714:	e4 f3       	brlt	.-8      	; 0x70e <__mulsf3_pse+0x84>
 716:	98 3e       	cpi	r25, 0xE8	; 232
 718:	d4 f3       	brlt	.-12     	; 0x70e <__mulsf3_pse+0x84>
 71a:	86 95       	lsr	r24
 71c:	77 95       	ror	r23
 71e:	67 95       	ror	r22
 720:	b7 95       	ror	r27
 722:	f7 95       	ror	r31
 724:	e7 95       	ror	r30
 726:	9f 5f       	subi	r25, 0xFF	; 255
 728:	c1 f7       	brne	.-16     	; 0x71a <__mulsf3_pse+0x90>
 72a:	fe 2b       	or	r31, r30
 72c:	88 0f       	add	r24, r24
 72e:	91 1d       	adc	r25, r1
 730:	96 95       	lsr	r25
 732:	87 95       	ror	r24
 734:	97 f9       	bld	r25, 7
 736:	08 95       	ret

00000738 <pow>:
 738:	fa 01       	movw	r30, r20
 73a:	ee 0f       	add	r30, r30
 73c:	ff 1f       	adc	r31, r31
 73e:	30 96       	adiw	r30, 0x00	; 0
 740:	21 05       	cpc	r18, r1
 742:	31 05       	cpc	r19, r1
 744:	a1 f1       	breq	.+104    	; 0x7ae <pow+0x76>
 746:	61 15       	cp	r22, r1
 748:	71 05       	cpc	r23, r1
 74a:	61 f4       	brne	.+24     	; 0x764 <pow+0x2c>
 74c:	80 38       	cpi	r24, 0x80	; 128
 74e:	bf e3       	ldi	r27, 0x3F	; 63
 750:	9b 07       	cpc	r25, r27
 752:	49 f1       	breq	.+82     	; 0x7a6 <pow+0x6e>
 754:	68 94       	set
 756:	90 38       	cpi	r25, 0x80	; 128
 758:	81 05       	cpc	r24, r1
 75a:	61 f0       	breq	.+24     	; 0x774 <pow+0x3c>
 75c:	80 38       	cpi	r24, 0x80	; 128
 75e:	bf ef       	ldi	r27, 0xFF	; 255
 760:	9b 07       	cpc	r25, r27
 762:	41 f0       	breq	.+16     	; 0x774 <pow+0x3c>
 764:	99 23       	and	r25, r25
 766:	4a f5       	brpl	.+82     	; 0x7ba <pow+0x82>
 768:	ff 3f       	cpi	r31, 0xFF	; 255
 76a:	e1 05       	cpc	r30, r1
 76c:	31 05       	cpc	r19, r1
 76e:	21 05       	cpc	r18, r1
 770:	19 f1       	breq	.+70     	; 0x7b8 <pow+0x80>
 772:	e8 94       	clt
 774:	08 94       	sec
 776:	e7 95       	ror	r30
 778:	d9 01       	movw	r26, r18
 77a:	aa 23       	and	r26, r26
 77c:	29 f4       	brne	.+10     	; 0x788 <pow+0x50>
 77e:	ab 2f       	mov	r26, r27
 780:	be 2f       	mov	r27, r30
 782:	f8 5f       	subi	r31, 0xF8	; 248
 784:	d0 f3       	brcs	.-12     	; 0x77a <pow+0x42>
 786:	10 c0       	rjmp	.+32     	; 0x7a8 <pow+0x70>
 788:	ff 5f       	subi	r31, 0xFF	; 255
 78a:	70 f4       	brcc	.+28     	; 0x7a8 <pow+0x70>
 78c:	a6 95       	lsr	r26
 78e:	e0 f7       	brcc	.-8      	; 0x788 <pow+0x50>
 790:	f7 39       	cpi	r31, 0x97	; 151
 792:	50 f0       	brcs	.+20     	; 0x7a8 <pow+0x70>
 794:	19 f0       	breq	.+6      	; 0x79c <pow+0x64>
 796:	ff 3a       	cpi	r31, 0xAF	; 175
 798:	38 f4       	brcc	.+14     	; 0x7a8 <pow+0x70>
 79a:	9f 77       	andi	r25, 0x7F	; 127
 79c:	9f 93       	push	r25
 79e:	0d d0       	rcall	.+26     	; 0x7ba <pow+0x82>
 7a0:	0f 90       	pop	r0
 7a2:	07 fc       	sbrc	r0, 7
 7a4:	90 58       	subi	r25, 0x80	; 128
 7a6:	08 95       	ret
 7a8:	46 f0       	brts	.+16     	; 0x7ba <pow+0x82>
 7aa:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_nan>
 7ae:	60 e0       	ldi	r22, 0x00	; 0
 7b0:	70 e0       	ldi	r23, 0x00	; 0
 7b2:	80 e8       	ldi	r24, 0x80	; 128
 7b4:	9f e3       	ldi	r25, 0x3F	; 63
 7b6:	08 95       	ret
 7b8:	4f e7       	ldi	r20, 0x7F	; 127
 7ba:	9f 77       	andi	r25, 0x7F	; 127
 7bc:	5f 93       	push	r21
 7be:	4f 93       	push	r20
 7c0:	3f 93       	push	r19
 7c2:	2f 93       	push	r18
 7c4:	0e 94 97 04 	call	0x92e	; 0x92e <log>
 7c8:	2f 91       	pop	r18
 7ca:	3f 91       	pop	r19
 7cc:	4f 91       	pop	r20
 7ce:	5f 91       	pop	r21
 7d0:	0e 94 2f 03 	call	0x65e	; 0x65e <__mulsf3>
 7d4:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <exp>
 7d8:	29 f4       	brne	.+10     	; 0x7e4 <pow+0xac>
 7da:	16 f0       	brts	.+4      	; 0x7e0 <pow+0xa8>
 7dc:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>
 7e0:	0c 94 28 03 	jmp	0x650	; 0x650 <__fp_zero>
 7e4:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_nan>

000007e8 <exp>:
 7e8:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_splitA>
 7ec:	a8 f3       	brcs	.-22     	; 0x7d8 <pow+0xa0>
 7ee:	96 38       	cpi	r25, 0x86	; 134
 7f0:	a0 f7       	brcc	.-24     	; 0x7da <pow+0xa2>
 7f2:	07 f8       	bld	r0, 7
 7f4:	0f 92       	push	r0
 7f6:	e8 94       	clt
 7f8:	2b e3       	ldi	r18, 0x3B	; 59
 7fa:	3a ea       	ldi	r19, 0xAA	; 170
 7fc:	48 eb       	ldi	r20, 0xB8	; 184
 7fe:	5f e7       	ldi	r21, 0x7F	; 127
 800:	0e 94 45 03 	call	0x68a	; 0x68a <__mulsf3_pse>
 804:	0f 92       	push	r0
 806:	0f 92       	push	r0
 808:	0f 92       	push	r0
 80a:	4d b7       	in	r20, 0x3d	; 61
 80c:	5e b7       	in	r21, 0x3e	; 62
 80e:	0f 92       	push	r0
 810:	0e 94 df 04 	call	0x9be	; 0x9be <modf>
 814:	e4 e5       	ldi	r30, 0x54	; 84
 816:	f0 e0       	ldi	r31, 0x00	; 0
 818:	0e 94 26 04 	call	0x84c	; 0x84c <__fp_powser>
 81c:	4f 91       	pop	r20
 81e:	5f 91       	pop	r21
 820:	ef 91       	pop	r30
 822:	ff 91       	pop	r31
 824:	e5 95       	asr	r30
 826:	ee 1f       	adc	r30, r30
 828:	ff 1f       	adc	r31, r31
 82a:	49 f0       	breq	.+18     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 82c:	fe 57       	subi	r31, 0x7E	; 126
 82e:	e0 68       	ori	r30, 0x80	; 128
 830:	44 27       	eor	r20, r20
 832:	ee 0f       	add	r30, r30
 834:	44 1f       	adc	r20, r20
 836:	fa 95       	dec	r31
 838:	e1 f7       	brne	.-8      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 83a:	41 95       	neg	r20
 83c:	55 0b       	sbc	r21, r21
 83e:	0e 94 59 04 	call	0x8b2	; 0x8b2 <ldexp>
 842:	0f 90       	pop	r0
 844:	07 fe       	sbrs	r0, 7
 846:	0c 94 4d 04 	jmp	0x89a	; 0x89a <inverse>
 84a:	08 95       	ret

0000084c <__fp_powser>:
 84c:	df 93       	push	r29
 84e:	cf 93       	push	r28
 850:	1f 93       	push	r17
 852:	0f 93       	push	r16
 854:	ff 92       	push	r15
 856:	ef 92       	push	r14
 858:	df 92       	push	r13
 85a:	7b 01       	movw	r14, r22
 85c:	8c 01       	movw	r16, r24
 85e:	68 94       	set
 860:	06 c0       	rjmp	.+12     	; 0x86e <__stack+0xf>
 862:	da 2e       	mov	r13, r26
 864:	ef 01       	movw	r28, r30
 866:	0e 94 42 03 	call	0x684	; 0x684 <__mulsf3x>
 86a:	fe 01       	movw	r30, r28
 86c:	e8 94       	clt
 86e:	a5 91       	lpm	r26, Z+
 870:	25 91       	lpm	r18, Z+
 872:	35 91       	lpm	r19, Z+
 874:	45 91       	lpm	r20, Z+
 876:	55 91       	lpm	r21, Z+
 878:	a6 f3       	brts	.-24     	; 0x862 <__stack+0x3>
 87a:	ef 01       	movw	r28, r30
 87c:	0e 94 ab 01 	call	0x356	; 0x356 <__addsf3x>
 880:	fe 01       	movw	r30, r28
 882:	97 01       	movw	r18, r14
 884:	a8 01       	movw	r20, r16
 886:	da 94       	dec	r13
 888:	69 f7       	brne	.-38     	; 0x864 <__stack+0x5>
 88a:	df 90       	pop	r13
 88c:	ef 90       	pop	r14
 88e:	ff 90       	pop	r15
 890:	0f 91       	pop	r16
 892:	1f 91       	pop	r17
 894:	cf 91       	pop	r28
 896:	df 91       	pop	r29
 898:	08 95       	ret

0000089a <inverse>:
 89a:	9b 01       	movw	r18, r22
 89c:	ac 01       	movw	r20, r24
 89e:	60 e0       	ldi	r22, 0x00	; 0
 8a0:	70 e0       	ldi	r23, 0x00	; 0
 8a2:	80 e8       	ldi	r24, 0x80	; 128
 8a4:	9f e3       	ldi	r25, 0x3F	; 63
 8a6:	0c 94 00 02 	jmp	0x400	; 0x400 <__divsf3>
 8aa:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>
 8ae:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_mpack>

000008b2 <ldexp>:
 8b2:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_splitA>
 8b6:	d8 f3       	brcs	.-10     	; 0x8ae <inverse+0x14>
 8b8:	99 23       	and	r25, r25
 8ba:	c9 f3       	breq	.-14     	; 0x8ae <inverse+0x14>
 8bc:	94 0f       	add	r25, r20
 8be:	51 1d       	adc	r21, r1
 8c0:	a3 f3       	brvs	.-24     	; 0x8aa <inverse+0x10>
 8c2:	91 50       	subi	r25, 0x01	; 1
 8c4:	50 40       	sbci	r21, 0x00	; 0
 8c6:	94 f0       	brlt	.+36     	; 0x8ec <ldexp+0x3a>
 8c8:	59 f0       	breq	.+22     	; 0x8e0 <ldexp+0x2e>
 8ca:	88 23       	and	r24, r24
 8cc:	32 f0       	brmi	.+12     	; 0x8da <ldexp+0x28>
 8ce:	66 0f       	add	r22, r22
 8d0:	77 1f       	adc	r23, r23
 8d2:	88 1f       	adc	r24, r24
 8d4:	91 50       	subi	r25, 0x01	; 1
 8d6:	50 40       	sbci	r21, 0x00	; 0
 8d8:	c1 f7       	brne	.-16     	; 0x8ca <ldexp+0x18>
 8da:	9e 3f       	cpi	r25, 0xFE	; 254
 8dc:	51 05       	cpc	r21, r1
 8de:	2c f7       	brge	.-54     	; 0x8aa <inverse+0x10>
 8e0:	88 0f       	add	r24, r24
 8e2:	91 1d       	adc	r25, r1
 8e4:	96 95       	lsr	r25
 8e6:	87 95       	ror	r24
 8e8:	97 f9       	bld	r25, 7
 8ea:	08 95       	ret
 8ec:	5f 3f       	cpi	r21, 0xFF	; 255
 8ee:	ac f0       	brlt	.+42     	; 0x91a <ldexp+0x68>
 8f0:	98 3e       	cpi	r25, 0xE8	; 232
 8f2:	9c f0       	brlt	.+38     	; 0x91a <ldexp+0x68>
 8f4:	bb 27       	eor	r27, r27
 8f6:	86 95       	lsr	r24
 8f8:	77 95       	ror	r23
 8fa:	67 95       	ror	r22
 8fc:	b7 95       	ror	r27
 8fe:	08 f4       	brcc	.+2      	; 0x902 <ldexp+0x50>
 900:	b1 60       	ori	r27, 0x01	; 1
 902:	93 95       	inc	r25
 904:	c1 f7       	brne	.-16     	; 0x8f6 <ldexp+0x44>
 906:	bb 0f       	add	r27, r27
 908:	58 f7       	brcc	.-42     	; 0x8e0 <ldexp+0x2e>
 90a:	11 f4       	brne	.+4      	; 0x910 <ldexp+0x5e>
 90c:	60 ff       	sbrs	r22, 0
 90e:	e8 cf       	rjmp	.-48     	; 0x8e0 <ldexp+0x2e>
 910:	6f 5f       	subi	r22, 0xFF	; 255
 912:	7f 4f       	sbci	r23, 0xFF	; 255
 914:	8f 4f       	sbci	r24, 0xFF	; 255
 916:	9f 4f       	sbci	r25, 0xFF	; 255
 918:	e3 cf       	rjmp	.-58     	; 0x8e0 <ldexp+0x2e>
 91a:	0c 94 29 03 	jmp	0x652	; 0x652 <__fp_szero>
 91e:	16 f0       	brts	.+4      	; 0x924 <ldexp+0x72>
 920:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_mpack>
 924:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__fp_nan>
 928:	68 94       	set
 92a:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_inf>

0000092e <log>:
 92e:	0e 94 0e 03 	call	0x61c	; 0x61c <__fp_splitA>
 932:	a8 f3       	brcs	.-22     	; 0x91e <ldexp+0x6c>
 934:	99 23       	and	r25, r25
 936:	c1 f3       	breq	.-16     	; 0x928 <ldexp+0x76>
 938:	ae f3       	brts	.-22     	; 0x924 <ldexp+0x72>
 93a:	df 93       	push	r29
 93c:	cf 93       	push	r28
 93e:	1f 93       	push	r17
 940:	0f 93       	push	r16
 942:	ff 92       	push	r15
 944:	c9 2f       	mov	r28, r25
 946:	dd 27       	eor	r29, r29
 948:	88 23       	and	r24, r24
 94a:	2a f0       	brmi	.+10     	; 0x956 <log+0x28>
 94c:	21 97       	sbiw	r28, 0x01	; 1
 94e:	66 0f       	add	r22, r22
 950:	77 1f       	adc	r23, r23
 952:	88 1f       	adc	r24, r24
 954:	da f7       	brpl	.-10     	; 0x94c <log+0x1e>
 956:	20 e0       	ldi	r18, 0x00	; 0
 958:	30 e0       	ldi	r19, 0x00	; 0
 95a:	40 e8       	ldi	r20, 0x80	; 128
 95c:	5f eb       	ldi	r21, 0xBF	; 191
 95e:	9f e3       	ldi	r25, 0x3F	; 63
 960:	88 39       	cpi	r24, 0x98	; 152
 962:	20 f0       	brcs	.+8      	; 0x96c <log+0x3e>
 964:	80 3e       	cpi	r24, 0xE0	; 224
 966:	38 f0       	brcs	.+14     	; 0x976 <log+0x48>
 968:	21 96       	adiw	r28, 0x01	; 1
 96a:	8f 77       	andi	r24, 0x7F	; 127
 96c:	0e 94 94 01 	call	0x328	; 0x328 <__addsf3>
 970:	ec e7       	ldi	r30, 0x7C	; 124
 972:	f0 e0       	ldi	r31, 0x00	; 0
 974:	04 c0       	rjmp	.+8      	; 0x97e <log+0x50>
 976:	0e 94 94 01 	call	0x328	; 0x328 <__addsf3>
 97a:	e9 ea       	ldi	r30, 0xA9	; 169
 97c:	f0 e0       	ldi	r31, 0x00	; 0
 97e:	0e 94 26 04 	call	0x84c	; 0x84c <__fp_powser>
 982:	8b 01       	movw	r16, r22
 984:	be 01       	movw	r22, r28
 986:	ec 01       	movw	r28, r24
 988:	fb 2e       	mov	r15, r27
 98a:	6f 57       	subi	r22, 0x7F	; 127
 98c:	71 09       	sbc	r23, r1
 98e:	75 95       	asr	r23
 990:	77 1f       	adc	r23, r23
 992:	88 0b       	sbc	r24, r24
 994:	99 0b       	sbc	r25, r25
 996:	0e 94 a3 02 	call	0x546	; 0x546 <__floatsisf>
 99a:	28 e1       	ldi	r18, 0x18	; 24
 99c:	32 e7       	ldi	r19, 0x72	; 114
 99e:	41 e3       	ldi	r20, 0x31	; 49
 9a0:	5f e3       	ldi	r21, 0x3F	; 63
 9a2:	0e 94 42 03 	call	0x684	; 0x684 <__mulsf3x>
 9a6:	af 2d       	mov	r26, r15
 9a8:	98 01       	movw	r18, r16
 9aa:	ae 01       	movw	r20, r28
 9ac:	ff 90       	pop	r15
 9ae:	0f 91       	pop	r16
 9b0:	1f 91       	pop	r17
 9b2:	cf 91       	pop	r28
 9b4:	df 91       	pop	r29
 9b6:	0e 94 ab 01 	call	0x356	; 0x356 <__addsf3x>
 9ba:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_round>

000009be <modf>:
 9be:	fa 01       	movw	r30, r20
 9c0:	dc 01       	movw	r26, r24
 9c2:	aa 0f       	add	r26, r26
 9c4:	bb 1f       	adc	r27, r27
 9c6:	9b 01       	movw	r18, r22
 9c8:	ac 01       	movw	r20, r24
 9ca:	bf 57       	subi	r27, 0x7F	; 127
 9cc:	28 f4       	brcc	.+10     	; 0x9d8 <modf+0x1a>
 9ce:	22 27       	eor	r18, r18
 9d0:	33 27       	eor	r19, r19
 9d2:	44 27       	eor	r20, r20
 9d4:	50 78       	andi	r21, 0x80	; 128
 9d6:	20 c0       	rjmp	.+64     	; 0xa18 <modf+0x5a>
 9d8:	b7 51       	subi	r27, 0x17	; 23
 9da:	90 f4       	brcc	.+36     	; 0xa00 <modf+0x42>
 9dc:	ab 2f       	mov	r26, r27
 9de:	00 24       	eor	r0, r0
 9e0:	46 95       	lsr	r20
 9e2:	37 95       	ror	r19
 9e4:	27 95       	ror	r18
 9e6:	01 1c       	adc	r0, r1
 9e8:	a3 95       	inc	r26
 9ea:	d2 f3       	brmi	.-12     	; 0x9e0 <modf+0x22>
 9ec:	00 20       	and	r0, r0
 9ee:	71 f0       	breq	.+28     	; 0xa0c <modf+0x4e>
 9f0:	22 0f       	add	r18, r18
 9f2:	33 1f       	adc	r19, r19
 9f4:	44 1f       	adc	r20, r20
 9f6:	b3 95       	inc	r27
 9f8:	da f3       	brmi	.-10     	; 0x9f0 <modf+0x32>
 9fa:	0e d0       	rcall	.+28     	; 0xa18 <modf+0x5a>
 9fc:	0c 94 93 01 	jmp	0x326	; 0x326 <__subsf3>
 a00:	61 30       	cpi	r22, 0x01	; 1
 a02:	71 05       	cpc	r23, r1
 a04:	a0 e8       	ldi	r26, 0x80	; 128
 a06:	8a 07       	cpc	r24, r26
 a08:	b9 46       	sbci	r27, 0x69	; 105
 a0a:	30 f4       	brcc	.+12     	; 0xa18 <modf+0x5a>
 a0c:	9b 01       	movw	r18, r22
 a0e:	ac 01       	movw	r20, r24
 a10:	66 27       	eor	r22, r22
 a12:	77 27       	eor	r23, r23
 a14:	88 27       	eor	r24, r24
 a16:	90 78       	andi	r25, 0x80	; 128
 a18:	30 96       	adiw	r30, 0x00	; 0
 a1a:	21 f0       	breq	.+8      	; 0xa24 <modf+0x66>
 a1c:	20 83       	st	Z, r18
 a1e:	31 83       	std	Z+1, r19	; 0x01
 a20:	42 83       	std	Z+2, r20	; 0x02
 a22:	53 83       	std	Z+3, r21	; 0x03
 a24:	08 95       	ret

00000a26 <__fp_mpack>:
 a26:	9f 3f       	cpi	r25, 0xFF	; 255
 a28:	31 f0       	breq	.+12     	; 0xa36 <__fp_mpack_finite+0xc>

00000a2a <__fp_mpack_finite>:
 a2a:	91 50       	subi	r25, 0x01	; 1
 a2c:	20 f4       	brcc	.+8      	; 0xa36 <__fp_mpack_finite+0xc>
 a2e:	87 95       	ror	r24
 a30:	77 95       	ror	r23
 a32:	67 95       	ror	r22
 a34:	b7 95       	ror	r27
 a36:	88 0f       	add	r24, r24
 a38:	91 1d       	adc	r25, r1
 a3a:	96 95       	lsr	r25
 a3c:	87 95       	ror	r24
 a3e:	97 f9       	bld	r25, 7
 a40:	08 95       	ret

00000a42 <__udivmodsi4>:
 a42:	a1 e2       	ldi	r26, 0x21	; 33
 a44:	1a 2e       	mov	r1, r26
 a46:	aa 1b       	sub	r26, r26
 a48:	bb 1b       	sub	r27, r27
 a4a:	fd 01       	movw	r30, r26
 a4c:	0d c0       	rjmp	.+26     	; 0xa68 <__udivmodsi4_ep>

00000a4e <__udivmodsi4_loop>:
 a4e:	aa 1f       	adc	r26, r26
 a50:	bb 1f       	adc	r27, r27
 a52:	ee 1f       	adc	r30, r30
 a54:	ff 1f       	adc	r31, r31
 a56:	a2 17       	cp	r26, r18
 a58:	b3 07       	cpc	r27, r19
 a5a:	e4 07       	cpc	r30, r20
 a5c:	f5 07       	cpc	r31, r21
 a5e:	20 f0       	brcs	.+8      	; 0xa68 <__udivmodsi4_ep>
 a60:	a2 1b       	sub	r26, r18
 a62:	b3 0b       	sbc	r27, r19
 a64:	e4 0b       	sbc	r30, r20
 a66:	f5 0b       	sbc	r31, r21

00000a68 <__udivmodsi4_ep>:
 a68:	66 1f       	adc	r22, r22
 a6a:	77 1f       	adc	r23, r23
 a6c:	88 1f       	adc	r24, r24
 a6e:	99 1f       	adc	r25, r25
 a70:	1a 94       	dec	r1
 a72:	69 f7       	brne	.-38     	; 0xa4e <__udivmodsi4_loop>
 a74:	60 95       	com	r22
 a76:	70 95       	com	r23
 a78:	80 95       	com	r24
 a7a:	90 95       	com	r25
 a7c:	9b 01       	movw	r18, r22
 a7e:	ac 01       	movw	r20, r24
 a80:	bd 01       	movw	r22, r26
 a82:	cf 01       	movw	r24, r30
 a84:	08 95       	ret

00000a86 <_exit>:
 a86:	f8 94       	cli

00000a88 <__stop_program>:
 a88:	ff cf       	rjmp	.-2      	; 0xa88 <__stop_program>
